{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,o5BCL9D,IAAMC,EAAO,OACPC,EAAY,YACZC,EAAQ,GAEd,SAASC,EAAKC,EAAGC,GACb,OAAOD,EAAIC,CACf,CAUO,IAAMC,EAAU,UACVC,EAAU,UAER,SAASC,EAAQJ,EAAGC,GAC/B,OAAOD,EAAIC,CACf,CAEO,IAAMI,EAAMC,GACf,SAAAD,EAAYT,EAAMC,I,4FAAWU,CAAA,KAAAF,GACzBG,KAAKZ,KAAOA,EACZY,KAAKX,UAAYA,CACrB,ICtBED,EAAO,OAEba,QAAQC,IAAId,EAAMe,EAAOC,EAAYd,GACrCW,QAAQC,IAAIX,EAAK,EAAG,IAIpB,IAAMc,EAAK,IAAIC,EAAa,QAAS,aACrCL,QAAQC,IAAIG,GAIZJ,QAAQC,IAAIK,GAMZN,QAAQC,IAAI,mBAAoBM,EAAQ,GAAI,IAI5CP,QAAQC,IAAIO,EAAO,GAAI,GAAIC,EAAAA,SAE3B,IAAMC,EAAK,IAAIL,EAAalB,EAAMgB,GAClCH,QAAQC,IAAIS,E","sources":["webpack://02-webpack-boilerplate/webpack/bootstrap","webpack://02-webpack-boilerplate/webpack/runtime/define property getters","webpack://02-webpack-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://02-webpack-boilerplate/webpack/runtime/make namespace object","webpack://02-webpack-boilerplate/./src/modulo1.js","webpack://02-webpack-boilerplate/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const nome = 'Noel';\nconst sobrenome = 'Gallagher';\nconst idade = 56;\n\nfunction soma(x, y) {\n    return x + y;\n}\n\n// * Formas de se exportar:\n\n// Exportando pelo nome das coisas:\nexport { nome, sobrenome as sobrenome2, idade, soma }; // agora \"nome\", \"sobrenome\", \"idade\" e \"soma\" podem ser exportadas do módulo\n// usando \"as\", pode-se trocar o nome do que é exportado\n\n// Exportando separadamente e diretamente na criação:\n\nexport const export1 = 'export1';\nexport const export2 = 'export2';\n\nexport default function diminui(x, y) { // exportação \"default\". Só pode ter um por módulo. Ao importar, pode-se usar qualquer nome para ela e não precisa de chaves\n    return x - y;\n}\n\nexport class Pessoa {\n    constructor(nome, sobrenome) {\n        this.nome = nome;\n        this.sobrenome = sobrenome;\n    };\n}\n\n// Exportando como default usando chaves:\n\nconst export3 = 'export3';\n// export { export3 as default };\n\n// Exportando função anônima como padrão:\n\n// export default (x, y) => x * y;\n\n// É comum exportar classes como padrão","// * Formas de se importar:\n\nimport { nome as nome2, sobrenome2, idade, soma } from './modulo1'; // agora, pode-se usar essas variáveis e função aqui nesse módulo\n// usando \"as\", pode-se trocar o nome do que é importado\n\nconst nome = 'Liam'; // essa variável \"colide\" com a que se está importando, e aí dá erro. Para resolver isso, pode-se renomear na importação\n\nconsole.log(nome, nome2, sobrenome2, idade);\nconsole.log(soma(5, 5));\n\nimport { export1, export2, diminui, Pessoa as classePessoa } from './modulo1';\n\nconst p1 = new classePessoa('Krist', 'Novoselic');\nconsole.log(p1);\n\nimport * as MeuModulo from './modulo1'; // importando tudo de \"modulo1\"\n\nconsole.log(MeuModulo); // um objeto que tem tudo o que está exportado em \"modulo1\". O que não exportar não vem\n// variáveis não exportadas podem ser consideradas variáveis privadas de um módulo, o que é poderoso porque não se toca o escopo global\n\nimport subtrai from './modulo1'; // importando o padrão (default) dentro de \"modulo1\". Pode ser qualquer nome\n// sempre que se importa sem chaves, importa o default\n\nconsole.log('Função default: ', subtrai(10, 2));\n\nimport padrao, { export3 } from './modulo1'; // importando o padrão e outras coisas do arquivo\n\nconsole.log(padrao(10, 3), export3);\n\nconst p2 = new classePessoa(nome, sobrenome2);\nconsole.log(p2);"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","nome","sobrenome","idade","soma","x","y","export1","export2","diminui","Pessoa","_createClass","_classCallCheck","this","console","log","nome2","sobrenome2","p1","classePessoa","MeuModulo","subtrai","padrao","export3","p2"],"sourceRoot":""}